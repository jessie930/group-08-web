{
	"info": {
		"_postman_id": "c20e41a6-9ee5-4f9b-852c-ba92b7100877",
		"name": "CarRental",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29626790"
	},
	"item": [
		{
			"name": "User",
			"item": [
				{
					"name": "Create User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonData = pm.response.json();",
									"let userEmail = jsonData.newUser.email;",
									"pm.environment.set(\"user_email\", userEmail);",
									"",
									"pm.test(\"Status code is 201\", () => {",
									"  pm.expect(pm.response.code).to.eql(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"pontus.carlson@gmail.com\",\n    \"fname\": \"Pontus\",\n    \"lname\": \"Carlson\",\n    \"password\": \"{{user_password}}\",\n    \"phonenumber\": \"0791234567\",\n    \"balance\": 0\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonData = pm.response.json();",
									"let userEmail = jsonData.newUser.email;",
									"pm.environment.set(\"user_email\", userEmail);",
									"",
									"pm.test(\"Status code is 201\", () => {",
									"  pm.expect(pm.response.code).to.eql(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"li.si@gmail.com\",\n    \"fname\": \"Si\",\n    \"lname\": \"Li\",\n    \"password\": \"{{user_password}}\",\n    \"phonenumber\": \"0791234567\",\n    \"balance\": 0\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Email already in use",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 409\", () => {",
									"  pm.expect(pm.response.code).to.eql(409);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{user_email}}\",\n    \"fname\": \"Si\",\n    \"lname\": \"Li\",\n    \"password\": \"henanquandemima\",\n    \"balance\": 0\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Authenticate user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonData = pm.response.json();",
									"let token = jsonData.token;",
									"pm.environment.set(\"token\", token);",
									"",
									"pm.test(\"Status code is 200\", () => {",
									"  pm.expect(pm.response.code).to.eql(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{user_email}}\",\n    \"password\": \"{{user_password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/users/login",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"  pm.expect(pm.response.code).to.eql(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/v1/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get user by email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"  pm.expect(pm.response.code).to.eql(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/v1/users/{{user_email}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"{{user_email}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "User not found",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", () => {",
									"  pm.expect(pm.response.code).to.eql(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/v1/users/not.a.user@gmail.com",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"not.a.user@gmail.com"
							]
						}
					},
					"response": []
				},
				{
					"name": "Replace all user data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonData = pm.response.json();",
									"let userEmail = jsonData.user.email;",
									"pm.environment.set(\"user_email\", userEmail);",
									"",
									"pm.test(\"Status code is 200\", () => {",
									"  pm.expect(pm.response.code).to.eql(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"john.doe@gmail.com\",\n    \"fname\": \"John\",\n    \"lname\": \"Doe\",\n    \"password\": \"{{user_password}}\",\n    \"phonenumber\": \"0791234567\",\n    \"balance\": 0\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/users/{{user_email}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"{{user_email}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Email already in use",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 409\", () => {",
									"  pm.expect(pm.response.code).to.eql(409);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{user_email}}\",\n    \"fname\": \"John\",\n    \"lname\": \"Doe\",\n    \"password\": \"{{user_password}}\",\n    \"balance\": 0\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/users/{{user_email}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"{{user_email}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Partially update user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonData = pm.response.json();",
									"let userEmail = jsonData.user.email;",
									"pm.environment.set(\"user_email\", userEmail);",
									"",
									"pm.test(\"Status code is 200\", () => {",
									"  pm.expect(pm.response.code).to.eql(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"pontuscarlson88@gmail.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/users/{{user_email}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"{{user_email}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete user by email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"  pm.expect(pm.response.code).to.eql(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/v1/users/{{user_email}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"{{user_email}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove all users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"  pm.expect(pm.response.code).to.eql(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/v1/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"users"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Booking",
			"item": [
				{
					"name": "Initialize",
					"item": [
						{
							"name": "Create user",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = pm.response.json();",
											"let userEmail = jsonData.newUser.email;",
											"pm.environment.set(\"user_email\", userEmail);",
											"",
											"pm.test(\"Status code is 201\", () => {",
											"  pm.expect(pm.response.code).to.eql(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"pontus.carlson@gmail.com\",\n    \"fname\": \"Pontus\",\n    \"lname\": \"Carlson\",\n    \"password\": \"{{user_password}}\",\n    \"phonenumber\": \"0791234567\",\n    \"balance\": 0\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/api/v1/users",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create car",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = pm.response.json();",
											"let carRegistration = jsonData.registration;",
											"pm.environment.set(\"car_registration\", carRegistration);",
											"",
											"pm.test(\"Status code is 201\", () => {",
											"  pm.expect(pm.response.code).to.eql(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"registration\": \"ABC124\",\n    \"image\": \"image\",\n    \"price\": 500,\n    \"color\": \"Blue\",\n    \"brand\": \"Volvo\",\n    \"description\": \"The perfect car for going on a road trip\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/api/v1/cars",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"cars"
									]
								}
							},
							"response": []
						},
						{
							"name": "Authenticate user",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = pm.response.json();",
											"let token = jsonData.token;",
											"pm.environment.set(\"token\", token);",
											"",
											"pm.test(\"Status code is 200\", () => {",
											"  pm.expect(pm.response.code).to.eql(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"{{user_email}}\",\n    \"password\": \"{{user_password}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/api/v1/users/login",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"users",
										"login"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Booking Tests",
					"item": [
						{
							"name": "Create booking for user",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = pm.response.json();",
											"let bookingRef = jsonData.booking.bookingReference;",
											"pm.environment.set(\"booking_reference\", bookingRef);",
											"",
											"pm.test(\"Status code is 201\", () => {",
											"  pm.expect(pm.response.code).to.eql(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"userEmail\": \"{{user_email}}\",\n    \"startDate\": \"2023-11-14\",\n    \"endDate\": \"2023-11-21\",\n    \"status\": \"Paid.\",\n    \"content\": \"Paid in advance, pick up on first day at 9:00\",\n    \"carRegistration\": \"{{car_registration}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/api/v1/users/{{user_email}}/bookings",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"users",
										"{{user_email}}",
										"bookings"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create booking for user",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = pm.response.json();",
											"let bookingRef = jsonData.booking.bookingReference;",
											"pm.environment.set(\"booking_reference\", bookingRef);",
											"",
											"pm.test(\"Status code is 201\", () => {",
											"  pm.expect(pm.response.code).to.eql(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"userEmail\": \"{{user_email}}\",\n    \"startDate\": \"2023-11-01\",\n    \"endDate\": \"2023-11-07\",\n    \"status\": \"Paid.\",\n    \"content\": \"Paid in advance, pick up on first day at 9:00\",\n    \"carRegistration\": \"{{car_registration}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/api/v1/users/zhang.san@gmail.com/bookings",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"users",
										"zhang.san@gmail.com",
										"bookings"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get all bookings",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"  pm.expect(pm.response.code).to.eql(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/api/v1/bookings",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"bookings"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get booking by booking reference",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"  pm.expect(pm.response.code).to.eql(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/api/v1/bookings/{{booking_reference}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"bookings",
										"{{booking_reference}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get all bookings by user",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"  pm.expect(pm.response.code).to.eql(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/api/v1/users/{{user_email}}/bookings",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"users",
										"{{user_email}}",
										"bookings"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get booking by user and booking reference",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"  pm.expect(pm.response.code).to.eql(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/api/v1/users/{{user_email}}/bookings/{{booking_reference}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"users",
										"{{user_email}}",
										"bookings",
										"{{booking_reference}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete booking by user and booking reference",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"  pm.expect(pm.response.code).to.eql(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{host}}/api/v1/users/{{user_email}}/bookings/{{booking_reference}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"users",
										"{{user_email}}",
										"bookings",
										"{{booking_reference}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete all bookings",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"  pm.expect(pm.response.code).to.eql(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{host}}/api/v1/bookings",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"bookings"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Cleanup",
					"item": [
						{
							"name": "Remove all users",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"  pm.expect(pm.response.code).to.eql(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{host}}/api/v1/users",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove all cars",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"  pm.expect(pm.response.code).to.eql(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{host}}/api/v1/cars",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"cars"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Car",
			"item": [
				{
					"name": "Setup",
					"item": [
						{
							"name": "Create new user",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = pm.response.json();",
											"let userEmail = jsonData.newUser.email;",
											"pm.environment.set(\"user_email\", userEmail);",
											"",
											"pm.test(\"Status code is 201\", () => {",
											"  pm.expect(pm.response.code).to.eql(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"bjorn.svensson@gmail.com\",\n    \"fname\": \"Björn\",\n    \"lname\": \"Svensson\",\n    \"password\": \"{{user_password}}\",\n    \"phonenumber\": \"0791234567\",\n    \"balance\": 0\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/api/v1/users",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "Authenticate user",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = pm.response.json();",
											"let token = jsonData.token;",
											"pm.environment.set(\"token\", token);",
											"",
											"pm.test(\"Status code is 200\", () => {",
											"  pm.expect(pm.response.code).to.eql(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"{{user_email}}\",\n    \"password\": \"{{user_password}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/api/v1/users/login",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"users",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create new manager",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = pm.response.json();",
											"let managerEmail = jsonData.newManager.email;",
											"pm.environment.set(\"manager_email\", managerEmail);",
											"",
											"pm.test(\"Status code is 201\", () => {",
											"  pm.expect(pm.response.code).to.eql(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"iamtheboss@bigboss.com\",\n    \"fname\": \"Bob\",\n    \"lname\": \"Boss\",\n    \"password\": \"{{manager_password}}\",\n    \"balance\": 0,\n    \"address\": \"Lindholmen, Gbg\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/api/v1/managers",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"managers"
									]
								}
							},
							"response": []
						},
						{
							"name": "Authenticate manager",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = pm.response.json();",
											"let token = jsonData.token;",
											"pm.environment.set(\"manager_token\", token);",
											"",
											"pm.test(\"Status code is 200\", () => {",
											"  pm.expect(pm.response.code).to.eql(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"{{manager_email}}\",\n    \"password\": \"{{manager_password}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/api/v1/managers/login",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"managers",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create new car",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = pm.response.json();",
											"let carRegistration = jsonData.registration;",
											"pm.environment.set(\"car_registration\", carRegistration);",
											"",
											"pm.test(\"Status code is 201\", () => {",
											"  pm.expect(pm.response.code).to.eql(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{manager_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"registration\": \"ABC222\",\n    \"image\": \"image\",\n    \"price\": 300,\n    \"color\": \"Blue\",\n    \"brand\": \"BYD\",\n    \"description\": \"This 2022 BYD Suv is perfect for weekend trips.\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/api/v1/cars",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"cars"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create new booking",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = pm.response.json();",
											"let bookingRef = jsonData.booking.bookingReference;",
											"pm.environment.set(\"booking_reference\", bookingRef);",
											"",
											"pm.test(\"Status code is 201\", () => {",
											"  pm.expect(pm.response.code).to.eql(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"userEmail\": \"{{user_email}}\",\n    \"startDate\": \"2023-11-14\",\n    \"endDate\": \"2023-11-21\",\n    \"status\": \"Paid.\",\n    \"content\": \"Paid in advance, pick up on first day at 9:00\",\n    \"carRegistration\": \"{{car_registration}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/api/v1/users/{{user_email}}/bookings",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"users",
										"{{user_email}}",
										"bookings"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Car Tests",
					"item": [
						{
							"name": "Create new car",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = pm.response.json();",
											"let carRegistration = jsonData.registration;",
											"pm.environment.set(\"car_registration_1\", carRegistration);",
											"",
											"pm.test(\"Status code is 201\", () => {",
											"  pm.expect(pm.response.code).to.eql(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{manager_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"registration\": \"ABC129\",\n    \"image\": \"image\",\n    \"price\": 500,\n    \"color\": \"Blue\",\n    \"brand\": \"BYD\",\n    \"description\": \"This 2022 BYD Suv is perfect for weekend trips.\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/api/v1/cars",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"cars"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create new car",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = pm.response.json();",
											"let carRegistration = jsonData.registration;",
											"pm.environment.set(\"car_registration\", carRegistration);",
											"",
											"pm.test(\"Status code is 201\", () => {",
											"  pm.expect(pm.response.code).to.eql(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{manager_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"registration\": \"ABC321\",\n    \"image\": \"image\",\n    \"price\": 400,\n    \"color\": \"Red\",\n    \"brand\": \"Volvo\",\n    \"description\": \"This car is red\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/api/v1/cars/",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"cars",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Create new car",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = pm.response.json();",
											"let carRegistration = jsonData.registration;",
											"pm.environment.set(\"car_registration\", carRegistration);",
											"",
											"pm.test(\"Status code is 201\", () => {",
											"  pm.expect(pm.response.code).to.eql(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{manager_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"registration\": \"ABC322\",\n    \"image\": \"image\",\n    \"price\": 800,\n    \"color\": \"Red\",\n    \"brand\": \"Mercedes\",\n    \"description\": \"This car is red\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/api/v1/cars/",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"cars",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Create new car for manager",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = pm.response.json();",
											"let carRegistration = jsonData.registration;",
											"pm.environment.set(\"car_registration\", carRegistration);",
											"",
											"pm.test(\"Status code is 201\", () => {",
											"  pm.expect(pm.response.code).to.eql(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{manager_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"registration\": \"ABC124\",\n    \"image\": \"image\",\n    \"price\": 900,\n    \"color\": \"Gray\",\n    \"brand\": \"BYD\",\n    \"description\": \"This 2022 BYD Suv is perfect for weekend trips.\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/api/v1/managers/{{manager_email}}/cars",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"managers",
										"{{manager_email}}",
										"cars"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create new car for manager",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = pm.response.json();",
											"let carRegistration = jsonData.registration;",
											"pm.environment.set(\"car_registration\", carRegistration);",
											"",
											"pm.test(\"Status code is 201\", () => {",
											"  pm.expect(pm.response.code).to.eql(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{manager_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"registration\": \"ABC125\",\n    \"image\": \"image\",\n    \"price\": 750,\n    \"color\": \"Yellow\",\n    \"brand\": \"BYD\",\n    \"description\": \"This 2022 BYD Suv is perfect for weekend trips.\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/api/v1/managers/{{manager_email}}/cars",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"managers",
										"{{manager_email}}",
										"cars"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get all cars",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"  pm.expect(pm.response.code).to.eql(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/api/v1/cars",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"cars"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get car by registration",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"  pm.expect(pm.response.code).to.eql(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/api/v1/cars/{{car_registration}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"cars",
										"{{car_registration}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sort all cars by price asc",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"  pm.expect(pm.response.code).to.eql(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/api/v1/cars/price/1",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"cars",
										"price",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sort all cars by price desc",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"  pm.expect(pm.response.code).to.eql(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/api/v1/cars/price/-1",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"cars",
										"price",
										"-1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Filter car based on color",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"  pm.expect(pm.response.code).to.eql(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/api/v1/cars/color/Red",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"cars",
										"color",
										"Red"
									]
								}
							},
							"response": []
						},
						{
							"name": "Filter car based on brand",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"  pm.expect(pm.response.code).to.eql(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/api/v1/cars/brand/Volvo",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"cars",
										"brand",
										"Volvo"
									]
								}
							},
							"response": []
						},
						{
							"name": "Filter car based on color and brand",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"  pm.expect(pm.response.code).to.eql(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/api/v1/cars/color&brand/Gray/BYD",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"cars",
										"color&brand",
										"Gray",
										"BYD"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get all cars by manager",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"  pm.expect(pm.response.code).to.eql(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{manager_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/api/v1/managers/{{manager_email}}/cars",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"managers",
										"{{manager_email}}",
										"cars"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get car by manager and registration",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"  pm.expect(pm.response.code).to.eql(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{manager_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/api/v1/managers/{{manager_email}}/cars/{{car_registration}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"managers",
										"{{manager_email}}",
										"cars",
										"{{car_registration}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get car by booking reference",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"  pm.expect(pm.response.code).to.eql(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/api/v1/bookings/{{booking_reference}}/car",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"bookings",
										"{{booking_reference}}",
										"car"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get car by user and booking",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"  pm.expect(pm.response.code).to.eql(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/api/v1/users/{{user_email}}/bookings/{{booking_reference}}/car",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"users",
										"{{user_email}}",
										"bookings",
										"{{booking_reference}}",
										"car"
									]
								}
							},
							"response": []
						},
						{
							"name": "Replace all car data",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let jsonData = pm.response.json();",
											"let carRegistration = jsonData.registration;",
											"pm.environment.set(\"car_registration\", carRegistration);",
											"",
											"pm.test(\"Status code is 200\", () => {",
											"  pm.expect(pm.response.code).to.eql(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{manager_token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"registration\": \"ABC234\",\n    \"image\": \"image\",\n    \"price\": 400,\n    \"color\": \"Grey\",\n    \"brand\": \"Volvo\",\n    \"description\": \"A comfy and safe Volvo\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/api/v1/cars/{{car_registration}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"cars",
										"{{car_registration}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Partially update car",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"  pm.expect(pm.response.code).to.eql(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{manager_token}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"image\": \"new_image\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/api/v1/cars/{{car_registration}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"cars",
										"{{car_registration}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Partially update car by manager",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"  pm.expect(pm.response.code).to.eql(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{manager_token}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"image\": \"new_image\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/api/v1/managers/{{manager_email}}/cars/{{car_registration}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"managers",
										"{{manager_email}}",
										"cars",
										"{{car_registration}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove car by registration",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"  pm.expect(pm.response.code).to.eql(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{manager_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{host}}/api/v1/cars/{{car_registration_1}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"cars",
										"{{car_registration_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete car by manager and registration",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"  pm.expect(pm.response.code).to.eql(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{manager_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{host}}/api/v1/managers/{{manager_email}}/cars/{{car_registration}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"managers",
										"{{manager_email}}",
										"cars",
										"{{car_registration}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove all cars",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"  pm.expect(pm.response.code).to.eql(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{manager_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{host}}/api/v1/cars",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"cars"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Cleanup",
					"item": [
						{
							"name": "Remove all users",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"  pm.expect(pm.response.code).to.eql(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{manager_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{host}}/api/v1/users",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove all bookings",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"  pm.expect(pm.response.code).to.eql(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{manager_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{host}}/api/v1/bookings",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"bookings"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove all managers",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", () => {",
											"  pm.expect(pm.response.code).to.eql(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{manager_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{host}}/api/v1/managers",
									"host": [
										"{{host}}"
									],
									"path": [
										"api",
										"v1",
										"managers"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Manager",
			"item": [
				{
					"name": "Create new manager",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonData = pm.response.json();",
									"let managerEmail = jsonData.newManager.email;",
									"pm.environment.set(\"manager_email\", managerEmail);",
									"",
									"pm.test(\"Status code is 201\", () => {",
									"  pm.expect(pm.response.code).to.eql(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"iamtheboss@bigboss.com\",\n    \"fname\": \"Bob\",\n    \"lname\": \"Boss\",\n    \"password\": \"{{manager_password}}\",\n    \"balance\": 0,\n    \"address\": \"Lindholmen, Gbg\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/managers",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"managers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create new manager",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", () => {",
									"  pm.expect(pm.response.code).to.eql(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"lilaoban@bigboss.com\",\n    \"fname\": \"Laoban\",\n    \"lname\": \"Li\",\n    \"password\": \"{{manager_password}}\",\n    \"balance\": 0,\n    \"address\": \"Lindholmen, Gbg\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/managers",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"managers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Authenticate manager",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonData = pm.response.json();",
									"let token = jsonData.token;",
									"pm.environment.set(\"manager_token\", token);",
									"",
									"pm.test(\"Status code is 200\", () => {",
									"  pm.expect(pm.response.code).to.eql(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{manager_email}}\",\n    \"password\": \"{{manager_password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/managers/login",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"managers",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all managers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"  pm.expect(pm.response.code).to.eql(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{manager_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/v1/managers",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"managers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get manager by email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"  pm.expect(pm.response.code).to.eql(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{manager_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/v1/managers/{{manager_email}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"managers",
								"{{manager_email}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Replace all manager data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonData = pm.response.json();",
									"let managerEmail = jsonData.manager.email;",
									"pm.environment.set(\"manager_email\", managerEmail);",
									"",
									"pm.test(\"Status code is 200\", () => {",
									"  pm.expect(pm.response.code).to.eql(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{manager_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"zhang@bigboss.com\",\n    \"fname\": \"Laoban\",\n    \"lname\": \"zhang\",\n    \"password\": \"{{manager_password}}\",\n    \"balance\": 200,\n    \"cars\": [],\n    \"address\": \"Malmo\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/managers/{{manager_email}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"managers",
								"{{manager_email}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Partially update manager",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonData = pm.response.json();",
									"let managerEmail = jsonData.manager.email;",
									"pm.environment.set(\"manager_email\", managerEmail);",
									"",
									"pm.test(\"Status code is 200\", () => {",
									"  pm.expect(pm.response.code).to.eql(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{manager_token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"zhang.laoban@gmail.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/v1/managers/{{manager_email}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"managers",
								"{{manager_email}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete manager by email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"  pm.expect(pm.response.code).to.eql(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{manager_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/v1/managers/{{manager_email}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"managers",
								"{{manager_email}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete all managers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"  pm.expect(pm.response.code).to.eql(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{manager_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/api/v1/managers",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"managers"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}
image: node:14-alpine

# Cache modules in between jobs per-branch
cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - server/node_modules/

stages:
  - build
  - test
  - publish
  - deploy

build:
  stage: build
  tags:
    - docker
  script:
    - cd server
    - npm install

test:
  stage: test
  tags:
    - docker
  services:
    - name: mvertes/alpine-mongo:latest
      alias: mongo
  variables:
    MONGODB_URI: "mongodb://mongo:27017/serverTestDB"
    JWT_SECRET: "jwt-secret-for-tests" 
  script:
    - cd server
    - npm run ci-test

publish:
  image: docker:latest
  stage: publish
  services: 
    - docker:dind
  script: 
    - docker build . -t $DOCKER_USERNAME/gocargo
    - docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
    - docker push $DOCKER_USERNAME/gocargo
  environment:
    name: production
  only:
    refs:
      - 76-deploy-project-to-vps

deploy:
  stage: deploy
  tags:
    - docker
  image: alpine:latest
  script:
    - chmod og= $ID_RSA
    - apk update && apk add openssh-client
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker pull $DOCKER_USERNAME/gocargo:latest"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker container rm -f gocargo || true"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker run -d -p 127.0.0.1:3000:3000 --restart unless-stopped --name gocargo $DOCKER_USERNAME/gocargo" 
  environment:
    name: production
    url: https://gocargo.jnsl.tk
  only:
    refs:
      - 76-deploy-project-to-vps
